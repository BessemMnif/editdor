{"version":3,"sources":["assets/editdor.png","assets/WoT.png","context/ediTDorContext.js","util.js","components/TDViewer/OperationsSelections.js","components/TDViewer/AddPropertyForm.js","components/TDViewer/Form.jsx","components/TDViewer/Property.jsx","components/TDViewer/AddActionForm.js","components/TDViewer/Action.jsx","components/TDViewer/AddEventForm.js","components/TDViewer/Event.jsx","components/TDViewer/AddProperty.js","components/TDViewer/AddAction.js","components/TDViewer/AddEvent.jsx","components/TDViewer/TDViewer.jsx","components/Editor/Editor.jsx","components/App/AppHeader/Button.js","components/App/AppHeader/CreateNewTDContent.js","components/App/AppHeader/CreateNewTD.js","components/App/AppHeader/AppHeader.jsx","context/editorReducers.js","context/GlobalState.js","components/App/App.jsx","index.js"],"names":["module","exports","React","createContext","offlineTD","theme","isModified","name","fileHandle","updateOfflineTD","td","updateIsModified","setFileHandle","handle","removeForm","form","addForm","addActionForm","params","addEventForm","buildAttributeListObject","firstAttribute","object","dontRender","attributeListObject","Object","entries","key","value","includes","separateForms","forms","undefined","newForms","i","length","Array","isArray","op","temp","push","operationsSelections","type","Swal","require","addPropertyForm","a","mixin","title","confirmButtonText","showCancelButton","progressSteps","queue","text","html","preConfirm","operations","map","x","document","getElementById","checked","filter","y","input","then","prop","dismiss","propValue","href","Form","props","formChooser","ObserveForm","propName","UnobserveForm","ReadForm","WriteForm","InvokeForm","interactionType","UndefinedForm","context","useContext","ediTDorContext","className","onClick","e","xmlns","viewBox","fill","fillRule","d","clipRule","alreadyRenderedKeys","Property","keys","constructor","property","attributes","JSON","stringify","checkIfFormExists","element","deepCompare","onClickAddForm","formToAdd","fire","icon","confirmButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","isConfirmed","description","stroke","strokeLinecap","strokeLinejoin","strokeWidth","Action","action","actionName","console","log","Event","event","eventName","addProperty","inputOptions","number","integer","boolean","string","array","inputPlaceholder","focusConfirm","showDenyButton","denyButtonText","result","resultValue","addAction","addEvent","tdJSON","oldtdJSON","error","TDViewer","parse","message","properties","actions","events","metaData","onClickAddEvent","eventToAdd","addSubfieldToExistingTD","onClickAddAction","actionToAdd","onClickAddProp","propToAdd","index","base","id","mapping","tdSchema","fileMatch","uri","editorOptions","selectOnLineNumbers","automaticLayout","lineDecorationsWidth","JSONEditorComponent","useState","schemas","proxy","setProxy","editorInstance","useRef","addSchema","val","removeSchema","indexOf","splice","emptySchemas","state","fetchSchema","target","url","URL","fetch","res","json","schema","onChange","editorText","_","atContext","forEach","contextKey","find","options","language","ref","editorWillMount","monaco","languages","jsonDefaults","setDiagnosticsOptions","validate","enableSchemaRequest","window","Proxy","set","jsonSchemaObjects","warn","editorDidMount","editor","onDidChangeModelDecorations","model","getModel","getModeId","Button","children","RequestTdMetadata","formField","label","placeholder","swal","CreateNewTD","tdMetadata","tdDescription","tdSecurity","backdrop","reverseButtons","newTd","thing","securityDefinitions","scheme","AppHeader","hasNativeFS","useCallback","verifyDiscard","confirm","read","file","_readFileHTML5","readFile","msg","alert","openFile","getFileHTML5","getFileHandle","getFile","writeFile","contents","createWriter","writer","write","close","createWritable","writable","setTimeout","saveAsHTML5","filename","aDownload","File","createObjectURL","setAttribute","click","saveFileAs","getNewFileHandle","newFile","saveFile","Promise","resolve","reject","fileInput","onchange","files","Error","showOpenFilePicker","types","accept","handles","chooseFileSystemEntries","opts","showSaveFilePicker","accepts","extensions","mimeTypes","reader","FileReader","addEventListener","srcElement","readAsText","useEffect","shortcutHandler","navigator","platform","match","metaKey","ctrlKey","preventDefault","stopPropagation","onbeforeunload","returnValue","removeEventListener","src","wot","alt","logo","style","display","UPDATE_OFFLINE_TD","UPDATE_IS_MODFIED","SET_FILE_HANDLE","REMOVE_FORM_FROM_TD","ADD_PROPERTYFORM_TO_TD","ADD_ACTIONFORM_TO_TD","ADD_EVENTFORM_TO_TD","editdorReducer","updateOfflineTDReducer","updateFileHandleReducer","removeFormReducer","addPropertyFormReducer","addActionFormReducer","addEventFormReducer","GlobalState","useReducer","editdorState","dispatch","Provider","dragElement","direction","md","first","second","onMouseMove","delta","clientX","clientY","Math","min","max","firstWidth","secondWidth","left","offsetLeft","width","onmousedown","offsetTop","offsetWidth","onmousemove","onmouseup","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3bfc8a36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/editdor.6cac600d.png\";","module.exports = __webpack_public_path__ + \"static/media/WoT.89768410.png\";","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React from 'react';\n\nexport default React.createContext({\n  offlineTD: '',\n  theme: 'dark',\n  isModified: false,\n  name: '',\n  fileHandle:'',\n  updateOfflineTD: td => {},\n  updateIsModified: isModified => {},\n  setFileHandle: handle => {},\n  removeForm: form => {},\n  addForm: form => {},\n  addActionForm: params => {},\n  addEventForm: params => {}\n});","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\n/**\n * \n * @param {*} firstAttribute \n * @param {*} object \n * @param {*} dontRender is a list of keys that shouldn't be packed into the attribute list.\n * \n * @description\n * Parses all key-value pairs of an object into an object'. \n */\nexport const buildAttributeListObject = (firstAttribute, object, dontRender) => {\n    let attributeListObject = {...firstAttribute}\n    \n    for (const [key, value] of Object.entries(object)) {\n        if (!dontRender.includes(key)) {\n            attributeListObject[key] = value\n        }\n    }\n\n    return attributeListObject;\n}\n\n/**\n * \n * @param {*} forms \n * \n * @description\n * Converts Forms that have an array as the \"op\" value into multiple separate Forms \n * which only have a string as \"op\" value.\n */\nexport const separateForms = (forms) => {\n    if (forms === undefined && !forms) {\n        return []\n    }\n\n    const newForms = [];\n\n    for (let i = 0; i < forms.length; i++) {\n        const form = forms[i];\n\n        if (!Array.isArray(form.op)) {\n            newForms.push(form);\n            continue;\n        }\n\n        for (let i = 0; i < form.op.length; i++) {\n            const temp = { ...form };\n            temp.op = form.op[i];\n            newForms.push(temp);\n        }\n    }\n\n    return newForms;\n}","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nconst operationsSelections = (type) => {\n    switch (type) {\n        case 'properties':\n            return `<div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" value=\"writeproperty\" id=\"checkbox1\">\n                        <label class=\"form-check-label\" for=\"checkbox1\">\n                        writeproperty\n                        </label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" value=\"readproperty\" id=\"checkbox2\">\n                        <label class=\"form-check-label\" for=\"checkbox2\">\n                        readproperty\n                        </label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" value=\"observeproperty\" id=\"checkbox3\">\n                        <label class=\"form-check-label\" for=\"checkbox3\">\n                        observeproperty\n                    </label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" value=\"unobserveproperty\" id=\"checkbox4\">\n                        <label class=\"form-check-label\" for=\"checkbox4\">\n                        unobserveproperty\n                        </label>\n                    </div>`;\n        case 'events':\n            return `<div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" value=\"subscribeevent\" id=\"checkbox1\">\n                        <label class=\"form-check-label\" for=\"checkbox1\">\n                        subscribeevent\n                        </label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" value=\"unsubscribeevent\" id=\"checkbox2\">\n                        <label class=\"form-check-label\" for=\"checkbox2\">\n                        unsubscribeevent\n                        </label>\n                    </div>`;\n        default:\n            return ''\n    }\n\n\n};\n\nexport default operationsSelections;","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport operationsSelections from './OperationsSelections';\nconst Swal = require('sweetalert2')\n\n\nconst addPropertyForm = async () => {\n    let form = {};\n    return Swal.mixin({\n        title: 'Add Form',\n        confirmButtonText: 'Next &rarr;',\n        showCancelButton: true,\n        progressSteps: ['1', '2']\n    }).queue([\n        {\n            text: 'Select an Operation or multiple Operations',\n            html: operationsSelections('properties'),\n            preConfirm: () => {\n                const operations = ['1', '2', '3', '4'].map(x => {\n                    return document.getElementById('checkbox' + x).checked ? document.getElementById('checkbox' + x).value : undefined\n                }).filter(y => y !== undefined);\n                form.op = operations    \n            }\n        },\n        {\n            input: 'text',\n            title: 'Form Href',\n            text: 'Please enter a href where your Property is reachable'\n        }\n    ]).then((prop) => {\n        if (!prop.dismiss) {\n            const propValue = prop.value\n             form.href =  propValue[1]\n            return form\n        }\n        return\n    })\n}\n\nexport default addPropertyForm;","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useContext } from \"react\";\nimport \"../../assets/main.css\"\nimport ediTDorContext from \"../../context/ediTDorContext\";\n\nexport default function Form(props) {\n\n    const formChooser = {\n        \"observeproperty\": <ObserveForm type=\"properties\" form={props.form} propName={props.propName} />,\n        \"unobserveproperty\": <UnobserveForm type=\"properties\" form={props.form} propName={props.propName}/>,\n        \"readproperty\": <ReadForm type=\"properties\" form={props.form} propName={props.propName}/>,\n        \"writeproperty\": <WriteForm type=\"properties\" form={props.form} propName={props.propName}/>,\n        \"invokeaction\": <InvokeForm type=\"actions\" form={props.form} propName={props.propName}/>,\n        \"unsubscribeevent\": <UnobserveForm type=\"events\" form={props.form} propName={props.propName}/>,\n    }\n\n    if (formChooser[props.form.op]) {\n        return formChooser[props.form.op];\n    }\n\n    if (props.interactionType === \"action\") {\n        return <InvokeForm type=\"actions\" form={props.form} propName={props.propName}/>\n    } else if (props.interactionType === \"event\") {\n        return <ObserveForm type=\"events\" form={props.form} propName={props.propName}/>\n    }\n\n    return <UndefinedForm form={props.form} propName={props.propName}/>\n}\n\n\n\nexport function ObserveForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formOrange rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formOrange\">\n            <div className=\"flex h-6 w-16 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formOrange place-self-center text-center text-xs px-4\">Observe</div>\n            </div>\n            <div className=\"place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formOrange\" onClick={() => deleteForm(props)}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                </svg>\n            </button>\n        </div>\n    );\n}\n\nexport function UnobserveForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formRed rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formRed\">\n            <div className=\"flex h-6 w-16 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formRed place-self-center text-center text-xs px-4\">Unobserve</div>\n            </div>\n            <div className=\" place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formRed\" onClick={() => deleteForm(props)}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                </svg>\n            </button>\n        </div>\n    );\n}\n\nexport function ReadForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formGreen rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formGreen\">\n            <div className=\"flex h-6 w-16 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formGreen place-self-center text-center text-xs px-4\">Read</div>\n            </div>\n            <div className=\" place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formGreen\" onClick={() => deleteForm(props)}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                </svg>\n            </button>\n        </div>\n    );\n}\n\nexport function WriteForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formBlue rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formBlue\">\n            <div className=\"flex h-6 w-16 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formBlue place-self-center text-center text-xs px-4\">Write</div>\n            </div>\n            <div className=\" place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formBlue\" onClick={() => deleteForm(props)}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                </svg>\n            </button>\n        </div>\n    );\n}\n\nexport function InvokeForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formRed rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formRed\">\n            <div className=\"flex h-6 w-16 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formRed place-self-center text-center text-xs px-4\">Invoke</div>\n            </div>\n            <div className=\" place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formRed\" onClick={() => deleteForm(props)}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                </svg>\n            </button>\n        </div>\n    );\n}\n\nexport function UndefinedForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-gray-300 rounded-md px-4 mt-2 bg-opacity-75 border-2 border-gray-300\">\n            <div className=\"flex h-6 w-16 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"place-self-center text-center text-xs px-4\">Undefined</div>\n            </div>\n            <div className=\" place-self-center pl-3 text-base overflow-hidden\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-white\" onClick={() => deleteForm(props)}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                </svg>\n            </button>\n        </div>\n    );\n}","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useContext } from \"react\";\nimport Swal from \"sweetalert2\";\nimport \"../../assets/main.css\"\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { buildAttributeListObject, separateForms } from \"../../util.js\"\nimport addPropertyForm from \"./AddPropertyForm\";\nimport Form from \"./Form\";\n\nconst alreadyRenderedKeys = [\"title\", \"forms\", \"description\"];\n\nexport default function Property(props) {\n    const context = useContext(ediTDorContext);\n\n    if ((Object.keys(props.prop).length === 0 && props.prop.constructor !== Object)) {\n        return <div className=\"text-3xl text-white\">Property could not be rendered because mandatory fields are missing.</div>\n    }\n\n    const property = props.prop;\n    const forms = separateForms(props.prop.forms);\n\n    const attributeListObject = buildAttributeListObject({ name: props.propName }, props.prop, alreadyRenderedKeys);\n    const attributes = Object.keys(attributeListObject).map(x => {\n        return <li key={x}>{x} : {JSON.stringify(attributeListObject[x])}</li>\n    });\n\n    const checkIfFormExists = (form) => {\n        for (const element of property.forms) {\n            for (const x of form.op) {\n                if (typeof (element.op) === 'string') {\n                    if (element.op === x.op) {\n                        return true;\n                    }\n                } else {\n                    if (element.op.includes(x)) {\n                        let deepCompare = true;\n                        for (const y in form) {\n                            if (y !== 'op') {\n                                if (element[y] !== form[y]) {\n                                    deepCompare = false;\n                                }\n                            }\n                        }\n                        if (deepCompare)\n                            return true\n                    }\n                }\n            }\n        }\n        return false\n    }\n\n    const onClickAddForm = async () => {\n        const formToAdd = await addPropertyForm()\n        if (formToAdd) {\n            if (checkIfFormExists(formToAdd)) {\n                Swal.fire({\n                    title: 'Duplication?',\n                    html: 'A Form with same fields already exists, are you sure you want to add this?',\n                    icon: 'warning',\n                    confirmButtonText:\n                        'Yes',\n                    confirmButtonAriaLabel: 'Yes',\n                    showCancelButton: true,\n                    cancelButtonText:\n                        'No',\n                    cancelButtonAriaLabel: 'No'\n                }).then(x => {\n                    if(x.isConfirmed) {\n                        context.addForm({ propName: props.propName, form: formToAdd })\n                    }\n                })\n            } else {\n                context.addForm({ propName: props.propName, form: formToAdd })\n            }\n        }\n    }\n\n    return (\n        <>\n            <details>\n                <summary className=\"text-xl text-gray-400 \">{property.title ?? props.propName}</summary>\n                <div className=\"mb-4\">\n\n                    <div className=\"text-lg text-gray-400 pb-2\">{property.description}</div>\n                    <ul className=\"list-disc text-base text-gray-300 pl-8\">{attributes}</ul>\n                    <div className=\"flex flex-row items-center \">\n                        <h2 className=\"flex-grow text-lg text-gray-400 text-bold\">Forms</h2>\n                        <button className=\"text-lg h-4 w-4 bg-gray-400 rounded-full\" onClick={onClickAddForm}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                            </svg>\n                        </button>\n                    </div>\n                    {forms.map((form, i) => (\n                        <Form key={i} propName={props.propName} form={form} interactionType={\"property\"} className=\"last:pb-4\"></Form>\n                    ))}\n                </div>\n            </details>\n        </>\n    )\n}","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nconst Swal = require('sweetalert2')\n\n\nconst addActionForm = async () => {\n    let form = {};\n    return Swal.mixin({\n        title: 'Add Form',\n        confirmButtonText: 'Next &rarr;',\n        showCancelButton: true,\n        progressSteps: ['1']\n    }).queue([\n        {\n            input: 'text',\n            title: 'Form Href',\n            text: 'Please enter a href where your Action is reachable'\n        }\n    ]).then((prop) => {\n        if (!prop.dismiss) {\n            const propValue = prop.value\n             form.href =  propValue[0]\n             form.op = \"invokeaction\"\n            return form\n        }\n        return\n    })\n}\n\nexport default addActionForm;","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useContext } from \"react\";\nimport \"../../assets/main.css\"\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { buildAttributeListObject, separateForms } from \"../../util.js\"\nimport addActionForm from \"./AddActionForm\";\nimport Form from \"./Form\";\nimport Swal from 'sweetalert2'\n\nconst alreadyRenderedKeys = [\"title\", \"forms\", \"description\"];\n\n\nexport default function Action(props) {\n    const context = useContext(ediTDorContext);\n\n    if ((Object.keys(props.action).length === 0 && props.action.constructor !== Object)) {\n        return <div className=\"text-3xl text-white\">Action could not be rendered because mandatory fields are missing.</div>\n    }\n\n    const action = props.action;\n    const forms = separateForms(props.action.forms);\n    const attributeListObject = buildAttributeListObject({ name: props.actionName }, props.action, alreadyRenderedKeys);\n    const attributes = Object.keys(attributeListObject).map(x => {\n        return <li key={x}>{x} : {JSON.stringify(attributeListObject[x])}</li>\n    });\n\n    const checkIfFormExists = (form) => {\n        for (const element of action.forms) {\n            for (const x of form.op) {\n                if (typeof (element.op) === 'string') {\n                    if (element.op === x.op) {\n                        return true;\n                    }\n                } else {\n                    if (element.op.includes(x)) {\n                        let deepCompare = true;\n                        for (const y in form) {\n                            if (y !== 'op') {\n                                if (element[y] !== form[y]) {\n                                    deepCompare = false;\n                                }\n                            }\n                        }\n                        if (deepCompare)\n                            return true\n                    }\n                }\n            }\n        }\n        return false\n    }\n\n    const onClickAddForm = async () => {\n        const formToAdd = await addActionForm()\n        if (formToAdd) {\n            if (checkIfFormExists(formToAdd)) {\n                Swal.fire({\n                    title: 'Duplication?',\n                    html: 'A Form with same fields already exists, are you sure you want to add this?',\n                    icon: 'warning',\n                    confirmButtonText:\n                        'Yes',\n                    confirmButtonAriaLabel: 'Yes',\n                    showCancelButton: true,\n                    cancelButtonText:\n                        'No',\n                    cancelButtonAriaLabel: 'No'\n                }).then(x => {\n                    if(x.isConfirmed) {\n                        context.addActionForm({ actionName: props.actionName, form: formToAdd })\n                    }\n                })\n            } else {\n                context.addActionForm({ actionName: props.actionName, form: formToAdd })\n            }\n        }\n    }\n    return (\n        <>\n            <details>\n                <summary className=\"text-xl text-gray-400\">{action.title ?? props.actionName}</summary>\n                <div className=\"mb-4\">\n                    <div className=\"text-lg text-gray-400 pb-2\">{action.description}</div>\n                    <ul className=\"text-base text-gray-300 list-disc pl-8\">{attributes}</ul>\n                    <div className=\"flex flex-row items-center \">\n                        <h2 className=\"flex-grow text-lg text-gray-400 text-bold\">Forms</h2>\n                        <button className=\"text-lg h-4 w-4 bg-gray-400 rounded-full\" onClick={onClickAddForm}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                            </svg></button>\n                    </div>\n                    {forms.map((form, i) => (\n                        <Form key={i} form={form} propName={props.actionName} interactionType={\"action\"}></Form>\n                    ))}\n                </div>\n            </details>\n        </>\n    )\n}","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport operationsSelections from './OperationsSelections';\nconst Swal = require('sweetalert2')\n\nconst addEventForm = () => {\n    let form = {};\n    return Swal.mixin({\n        title: 'Add Event Form',\n        confirmButtonText: 'Next &rarr;',\n        showCancelButton: true,\n        progressSteps: ['1', '2']\n    }).queue([\n        {\n            text: 'Select an Operation or multiple Operations',\n            html: operationsSelections('events'),\n            preConfirm: () => {\n                const operations = ['1', '2'].map(x => {\n                    return document.getElementById('checkbox' + x).checked ? document.getElementById('checkbox' + x).value : undefined\n                }).filter(y => y !== undefined);\n                console.log('operations', operations)\n                form.op = operations\n            }\n        },\n        {\n            input: 'text',\n            title: 'Form Href',\n            text: 'Please enter a href where your Event is reachable'\n        }\n    ]).then((prop) => {\n        if (!prop.dismiss) {\n            const propValue = prop.value\n            form.href = propValue[1]\n            return form\n            \n        }\n        return\n    })\n}\nexport default addEventForm;","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useContext } from \"react\";\nimport \"../../assets/main.css\"\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { buildAttributeListObject, separateForms } from \"../../util.js\"\nimport addEventForm from \"./AddEventForm\";\nimport Form from \"./Form\";\nimport Swal from 'sweetalert2'\n\nconst alreadyRenderedKeys = [\"title\", \"forms\", \"description\"];\n\nexport default function Event(props) {\n    const context = useContext(ediTDorContext);\n    if ((Object.keys(props.event).length === 0 && props.event.constructor !== Object)) {\n        return <div className=\"text-3xl text-white\">Event could not be rendered because mandatory fields are missing.</div>\n    }\n\n    const event = props.event;\n    const forms = separateForms(props.event.forms);\n    const attributeListObject = buildAttributeListObject({ name: props.eventName }, props.event, alreadyRenderedKeys);\n    const attributes = Object.keys(attributeListObject).map(x => {\n        return <li key={x}>{x} : {JSON.stringify(attributeListObject[x])}</li>\n    });\n\n    const checkIfFormExists = (form) => {\n        for (const element of event.forms) {\n            for (const x of form.op) {\n                if (typeof (element.op) === 'string') {\n                    if (element.op === x.op) {\n                        return true;\n                    }\n                } else {\n                    if (element.op.includes(x)) {\n                        let deepCompare = true;\n                        for (const y in form) {\n                            if (y !== 'op') {\n                                if (element[y] !== form[y]) {\n                                    deepCompare = false;\n                                }\n                            }\n                        }\n                        if (deepCompare)\n                            return true\n                    }\n                }\n            }\n        }\n        return false\n    }\n\n    const onClickAddForm = async () => {\n        const formToAdd = await addEventForm()\n        if (formToAdd) {\n            if (checkIfFormExists(formToAdd)) {\n                Swal.fire({\n                    title: 'Duplication?',\n                    html: 'A Form with same fields already exists, are you sure you want to add this?',\n                    icon: 'warning',\n                    confirmButtonText:\n                        'Yes',\n                    confirmButtonAriaLabel: 'Yes',\n                    showCancelButton: true,\n                    cancelButtonText:\n                        'No',\n                    cancelButtonAriaLabel: 'No'\n                }).then(x => {\n                    if(x.isConfirmed) {\n                        context.addEventForm({ eventName: props.eventName, form: formToAdd })\n                    }\n                })\n            } else {\n                context.addEventForm({ eventName: props.eventName, form: formToAdd })\n            }\n        }\n    }\n\n    return (\n        <>\n            <details>\n                <summary className=\"text-xl text-gray-400\">{event.title ?? props.eventName}</summary>\n                <div className=\"mb-4\">\n                    <div className=\"text-lg text-gray-400 pb-2\">{event.description}</div>\n                    <ul className=\"text-base text-gray-300 list-disc pl-8\">{attributes}</ul>\n                    <div className=\"flex flex-row items-center \">\n                        <h2 className=\"flex-grow text-lg text-gray-400 text-bold\">Forms</h2>\n                        <button className=\"text-lg h-4 w-4 bg-gray-400 rounded-full\" onClick={onClickAddForm}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                            </svg>\n                        </button>\n                    </div>\n                    {forms.map((form, i) => (\n                        <Form key={i} form={form} propName={props.eventName} interactionType={\"event\"}></Form>\n                    ))}\n                </div>\n            </details>\n        </>\n    )\n}","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport operationsSelections from './OperationsSelections';\nconst Swal = require('sweetalert2')\n\n\nconst addProperty = async () => {\n    let property = {};\n    return Swal.mixin({\n        input: 'text',\n        confirmButtonText: 'Next &rarr;',\n        showCancelButton: true,\n        progressSteps: ['1', '2', '3']\n    }).queue([\n        {\n            title: 'Propertytitle',\n            text: 'Please enter a name for your new Property'\n        },\n        {\n            title: 'Propertytype',\n            text: 'Please enter a type for your new Property',\n            input: 'select',\n            inputOptions: {\n                number: 'number',\n                integer: 'integer',\n                boolean: 'boolean',\n                string: 'string',\n                object: 'object',\n                array: 'array',\n            },\n            inputPlaceholder: 'Select a type',\n        },\n        {\n            title: 'Add a Form ',\n            text: 'Do you want to add a form to your Property?',\n            focusConfirm: true,\n            confirmButtonText: 'Yes',\n            showCancelButton: false,\n            showDenyButton: true,\n            denyButtonText: 'No',\n            input: null,\n        }\n    ]).then((result) => {\n        if (!result.dismiss) {\n            if (result.value[2]) {\n                return Swal.mixin({\n                    title: 'Add Form',\n                    confirmButtonText: 'Next &rarr;',\n                    showCancelButton: true,\n                    progressSteps: ['1', '2']\n                }).queue([\n                    {\n                        text: 'Select an Operation or multiple Operations',\n                        html: operationsSelections('properties'),\n                        preConfirm: () => {\n                            const operations = ['1', '2', '3', '4'].map(x => {\n                                return document.getElementById('checkbox' + x).checked ? document.getElementById('checkbox' + x).value : undefined\n                            }).filter(y => y !== undefined);\n                            result.value[3] = operations\n                        }\n                    },\n                    {\n                        input: 'text',\n                        title: 'Form Href',\n                        text: 'Please enter a href where your Property is reachable'\n                    }\n                ]).then((prop) => {\n                    if (!prop.dismiss) {\n                        const propValue = prop.value\n                        const resultValue = result.value\n                        property = {\n                            title: resultValue[0],\n                            type: resultValue[1],\n                            forms: [\n                                {\n                                    op: resultValue[3],\n                                    href: propValue[1]\n                                }\n                            ]\n                        }  \n                        return property \n                    }\n                    return \n                })\n            }\n            const resultValue = result.value\n            if (!result[2]) {\n                property = {\n                    title: resultValue[0],\n                    type: resultValue[1]\n                }\n            }\n            console.log(`Property`, property)\n            return property\n        }\n        return\n    })\n}\n\nexport default addProperty;","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nconst Swal = require('sweetalert2')\n\n\nconst addAction = () => {\n    let action = {};\n    return Swal.mixin({\n        input: 'text',\n        confirmButtonText: 'Next &rarr;',\n        showCancelButton: true,\n        progressSteps: ['1', '2']\n    }).queue([\n        {\n            title: 'Actiontitle',\n            text: 'Please enter a name for your new Action'\n        },\n        {\n            title: 'Add a Form ',\n            text: 'Do you want to add a form to your Action?',\n            focusConfirm: true,\n            confirmButtonText: 'Yes',\n            showCancelButton: false,\n            showDenyButton: true,\n            denyButtonText: 'No',\n            input: null\n        }\n    ]).then((result) => {\n        if (!result.dismiss) {\n            if (result.value[1]) {\n                return Swal.mixin({\n                    title: 'Add Form',\n                    confirmButtonText: 'Next &rarr;',\n                    showCancelButton: true,\n                    progressSteps: ['1']\n                }).queue([\n                    {\n                        input: 'text',\n                        title: 'Form Href',\n                        text: 'Please enter a href where your Action is reachable'\n                    }\n                ]).then((prop) => {\n                    if (!prop.dismiss) {\n                        const resultValue = result.value\n                        const propValue = prop.value\n                        action = {\n                            title: resultValue[0],\n                            forms: [\n                                {\n                                    op: 'invokeaction',\n                                    href: propValue[1]\n                                }\n                            ]\n                        }\n                        return action\n                    }\n                    return\n                })\n            }\n                const resultValue = result.value\n                if (!resultValue[1]) {\n                    action = {\n                        title: resultValue[0],\n                    }\n                }\n                return action\n            }\n            return\n    })\n}\n\nexport default addAction","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport operationsSelections from './OperationsSelections';\nconst Swal = require('sweetalert2')\n\nconst addEvent = () => {\n    let event = {};\n    return Swal.mixin({\n        input: 'text',\n        confirmButtonText: 'Next &rarr;',\n        showCancelButton: true,\n        progressSteps: ['1', '2']\n    }).queue([\n        {\n            title: 'Eventtitle',\n            text: 'Please enter a name for your new Event'\n        },\n        {\n            title: 'Add a Form ',\n            text: 'Do you want to add a form to your Event?',\n            focusConfirm: true,\n            confirmButtonText: 'Yes',\n            showCancelButton: false,\n            showDenyButton: true,\n            denyButtonText: 'No',\n            input: null\n        }\n    ]).then((result) => {\n        if (!result.dismiss) {\n            if (result.value[1]) {\n                return Swal.mixin({\n                    title: 'Add Form',\n                    confirmButtonText: 'Next &rarr;',\n                    showCancelButton: true,\n                    progressSteps: ['1', '2']\n                }).queue([\n                    {\n                        text: 'Select an Operation or multiple Operations',\n                        html: operationsSelections('events'),\n                        preConfirm: () => {\n                            const operations = ['1', '2'].map(x => {\n                                return document.getElementById('checkbox' + x).checked ? document.getElementById('checkbox' + x).value : undefined\n                            }).filter(y => y !== undefined);\n                            console.log('operations', operations)\n                            result.value[2] = operations\n                        }\n                    },\n                    {\n                        input: 'text',\n                        title: 'Form Href',\n                        text: 'Please enter a href where your Event is reachable'\n                    }\n                ]).then((prop) => {\n                    if (!prop.dismiss) {\n                        const resultValue = result.value\n                        const propValue = prop.value\n                        event = {\n                            title: resultValue[0],\n                            forms: [\n                                {\n                                    op: resultValue[2],\n                                    href: propValue[1]\n                                }\n                            ]\n                        }\n                        return event\n                    }\n                    return\n                })\n            }\n            const resultValue = result.value\n\n            if (!resultValue[1]) {\n                event = {\n                    title: resultValue[0],\n                }\n            }\n            return event\n        }\n        return;\n    })\n}\n\nexport default addEvent;","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useContext } from 'react';\nimport Property from './Property';\nimport Action from './Action';\nimport Event from './Event';\nimport ediTDorContext from '../../context/ediTDorContext';\nimport addProperty from './AddProperty';\nimport addAction from './AddAction';\nimport addEvent from './AddEvent';\nimport { buildAttributeListObject } from '../../util';\nimport '../../assets/main.css'\nlet tdJSON = {};\nlet oldtdJSON = {};\nlet error = \"\";\n\nexport default function TDViewer() {\n    const context = useContext(ediTDorContext);\n    try {\n        oldtdJSON = tdJSON;\n        tdJSON = JSON.parse(context.offlineTD);\n        error = '';\n    } catch (e) {\n        error = e.message;\n        tdJSON = oldtdJSON;\n    }\n\n    if (!Object.keys(tdJSON).length) {\n        return (\n            <div className=\"flex h-full w-full bg-gray-500 justify-center align-center text-center \">\n                <div className=\"text-4xl text-white place-self-center\">Start writing a new TD by clicking \"New TD\"</div>\n            </div>\n        )\n    }\n\n    const onClickAddEvent = async () => {\n        const eventToAdd = await addEvent()\n        if (eventToAdd) {\n            addSubfieldToExistingTD('events', eventToAdd.title, eventToAdd)\n        }\n    }\n\n    const onClickAddAction = async () => {\n        const actionToAdd = await addAction()\n        if (actionToAdd) {\n            addSubfieldToExistingTD('actions', actionToAdd.title, actionToAdd)\n        }\n    }\n\n    const onClickAddProp = async () => {\n        const propToAdd = await addProperty()\n        if (propToAdd) {\n            addSubfieldToExistingTD('properties', propToAdd.title, propToAdd)\n        }\n    }\n\n    const addSubfieldToExistingTD = (type, name, property) => {\n        if (!tdJSON[type]) {\n            tdJSON[type] = {};\n        }\n        tdJSON[type][name] = property\n        context.updateOfflineTD(JSON.stringify(tdJSON,null, 2), 'TDViewer')\n    }\n\n    let properties;\n    let actions;\n    let events;\n    let metaData;\n\n    if (tdJSON) {\n        if (tdJSON.properties) {\n            properties = Object.keys(tdJSON.properties).map((key, index) => {\n                return (<Property base={tdJSON.base}\n                    prop={tdJSON.properties[key]} propName={key} key={index} />);\n            });\n        }\n        if (tdJSON.actions) {\n            actions = Object.keys(tdJSON.actions).map((key, index) => {\n                return (<Action action={tdJSON.actions[key]} actionName={key} key={index} />);\n            });\n        }\n        if (tdJSON.events) {\n            events = Object.keys(tdJSON.events).map((key, index) => {\n                return (<Event event={tdJSON.events[key]} eventName={key} key={index} />);\n            });\n        }\n\n        metaData = tdJSON;\n    }\n\n    const alreadyRenderedKeys = [\"id\", \"properties\", \"actions\", \"events\", \"description\", \"title\",];\n\n    const attributeListObject = buildAttributeListObject(tdJSON.id ? {id: tdJSON.id} : {}, tdJSON, alreadyRenderedKeys);\n\n    const attributes = Object.keys(attributeListObject).map(x => {\n        return <li key={x}>{x} : {JSON.stringify(attributeListObject[x])}</li>\n    });\n\n\n    return (\n        <div className=\"h-full w-full bg-gray-500 p-8 overflow-scroll overflow-x-hidden\">\n            {(error.length > 0 && (\n                <div className=\"flex h-10 w-full bg-formRed rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formRed\">\n                    <div className=\"flex h-6 w-16 bg-white rounded-md place-self-center justify-center\">\n                        <div className=\"text-formRed place-self-center text-center text-xs px-4\">Error</div>\n                    </div>\n                    <div className=\" place-self-center pl-3 text-base text-white overflow-hidden\">{error}</div>\n                </div>))}\n            {(metaData !== undefined && Object.keys(metaData).length > 0) && (\n                <div>\n                    <div className=\"text-3xl text-white\">{metaData.title}</div>\n                    <ul className=\"list-disc text-lg text-gray-400 pt-1 pl-8 \">{attributes}</ul>\n                    <div className=\"text-xl text-white pt-4\">{metaData.description}</div>\n                </div>)\n            }\n\n            <div className=\"flex justify-between items-end pt-8 pb-4\">\n                <div className=\"text-2xl text-white\">Properties</div>\n                <div className=\"text-white font-bold text-sm bg-blue-500 cursor-pointer rounded-md p-2\" onClick={onClickAddProp}>Add new Property</div>\n            </div>\n            {properties && (\n                <>\n                    <div className=\"rounded-lg bg-gray-600 px-6 pt-4 pb-4\">{properties}</div>\n                </>)\n            }\n\n            <div className=\"flex justify-between items-end pt-8 pb-4\">\n                <div className=\"text-2xl text-white pl-1\">Actions</div>\n                <div className=\"text-white font-bold text-sm bg-blue-500 cursor-pointer rounded-md p-2\" onClick={onClickAddAction}>Add new Action</div>\n            </div>\n            {actions && (\n                <>\n                    <div className=\"rounded-lg bg-gray-600 px-6 pt-4 pb-4\">{actions}</div>\n                </>)\n            }\n\n            <div className=\"flex justify-between items-end pt-8 pb-4\">\n                <div className=\"text-2xl text-white\">Events</div>\n                <div className=\"text-white font-bold text-sm bg-blue-500 cursor-pointer rounded-md p-2\" onClick={onClickAddEvent}>Add new Event</div>\n            </div>\n            {events && (\n                <>\n                    <div className=\"rounded-lg bg-gray-600 px-6 pt-4 pb-4\">{events}</div>\n                </>)\n            }\n            <div className=\"h-16\"></div>\n        </div >\n    );\n}\n\n\n","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useContext, useState, useRef } from 'react';\nimport MonacoEditor from 'react-monaco-editor';\nimport ediTDorContext from '../../context/ediTDorContext';\n\nconst mapping = require('../../assets/mapping.json')\n\nconst tdSchema = {\n  fileMatch: [\"*/*\"],\n  uri: \"https://raw.githubusercontent.com/thingweb/thingweb-playground/%40thing-description-playground/web%401.0.0/packages/playground-core/td-schema.json\"\n};\n\n//List of all Options can be found here: https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html\nconst editorOptions = {\n  selectOnLineNumbers: true,\n  automaticLayout: true,\n  lineDecorationsWidth: 20\n};\n\nconst JSONEditorComponent = (props) => {\n  const context = useContext(ediTDorContext);\n  const [schemas] = useState([]);\n  const [proxy, setProxy] = useState(undefined);\n  const editorInstance = useRef(null);\n\n\n  const editorWillMount = (monaco) => {\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n      validate: true,\n      enableSchemaRequest: true,\n      schemas: [tdSchema]\n    });\n    if (!(\"Proxy\" in window)) {\n      console.warn(\"Your browser doesn't support Proxies.\");\n      return;\n    }\n\n    let proxy = new Proxy(schemas, {\n      set: function (target, property, value, _) {\n        target[property] = value;\n\n        let jsonSchemaObjects = [tdSchema];\n        for (let i = 0; i < target.length; i++) {\n          jsonSchemaObjects.push(\n            {\n              fileMatch: [\"*/*\"],\n              uri: target[i]\n            }\n          );\n        }\n\n        monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n          validate: true,\n          enableSchemaRequest: true,\n          schemas: jsonSchemaObjects\n        });\n\n        return true;\n\n      },\n    });\n    setProxy(proxy);\n  }\n\n  const editorDidMount = (editor, monaco) => {\n    editor.onDidChangeModelDecorations(() => {\n      const model = editor.getModel();\n      if (model === null || model.getModeId() !== \"json\")\n        return;\n    });\n  }\n\n  const addSchema = (val) => {\n    if (proxy.includes(val)) {\n      return;\n    }\n    proxy.push(val);\n  }\n\n  const removeSchema = (val) => {\n    const index = proxy.indexOf(val);\n    if (index === -1) {\n      return;\n    }\n    proxy.splice(index, 1);\n  }\n\n  const emptySchemas = () => {\n    proxy.splice(0, this.state.proxy.length);\n  }\n\n  const fetchSchema = async (target) => {\n    if (proxy.includes(target)) {\n      return;\n    }\n\n    try {\n      const url = new URL(target);\n      const res = await fetch(url);\n\n      const schema = await res.json();\n      return schema;\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n\n\n  const onChange = async (editorText, _) => {\n    try {\n      const json = JSON.parse(editorText);\n      if (!('@context' in json)) {\n        emptySchemas();\n        return;\n      }\n\n      const atContext = json[\"@context\"];\n      \n      // handle if @context is a string\n      if (typeof atContext === 'string') {\n        if (mapping[atContext] !== undefined) {\n          const schema = await fetchSchema(atContext);\n          if (schema) {\n            addSchema(atContext);\n          } else {\n            emptySchemas();\n          }\n          return;\n        }\n      }\n      \n      // handle if @context is an array\n      if (Array.isArray(atContext)) {\n        for (let i = 0; i < atContext.length; i++) {\n          if (typeof atContext[i] === 'string') {\n            if (mapping[atContext] !== undefined) {\n              const schema = await fetchSchema(atContext[i]);\n              if (schema) {\n                addSchema(atContext[i]);\n              }\n            }\n          }\n          if (typeof atContext[i] === 'object') {\n            Object.keys(atContext[i]).forEach(async contextKey => {\n              if (mapping[atContext[i][contextKey]] !== undefined) {\n                const schema = await fetchSchema(mapping[atContext[i][contextKey]]);\n                if (schema) {\n                  addSchema(mapping[atContext[i][contextKey]]);\n                }\n              }\n            })\n          }\n        }\n      }\n      // remove deleted schemas\n      if (Array.isArray(atContext)) {\n        for (let i = 0; i < proxy.length; i++) {\n          const x = Object.keys(mapping).find(key => mapping[key] === proxy[i])\n          if (!atContext.includes(x)) {\n            removeSchema(proxy[i]);\n          }\n        }\n      }\n    } catch (e) {\n    }finally {\n      context.updateOfflineTD(editorText, 'Editor')\n    }\n  }\n\n  return (\n    <div className=\"w-full h-full\">\n      <MonacoEditor\n        options={editorOptions}\n        theme={'vs-' + context.theme}\n        language=\"json\"\n        ref={editorInstance}\n        value={context.offlineTD}\n        editorWillMount={editorWillMount}\n        editorDidMount={editorDidMount}\n        onChange={async (editorText) => { await onChange(editorText) }} />\n    </div>\n  );\n}\n\nexport default JSONEditorComponent","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React from 'react';\n\nexport default function Button(props) {\n    return (\n        <div\n            onClick={props.onClick}\n            className=\"\n                flex\n                bg-blue-400                 \n                hover:bg-blue-300 \n                text-white \n                font-bold \n                py-2 px-5 \n                rounded \n                w-32 \n                h-12\n                text-center \n                cursor-pointer\n                justify-center\n            \">\n            <div className=\"place-self-center\">\n                {props.children}\n            </div>\n        </div>\n    );\n}","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\n\nexport function RequestTdMetadata() {\n    return `${formField(\"ID\", \"urn:thing-id\", \"thing-id\", \"url\")}\n            ${formField(\"Title\", \"Thing Title\", \"thing-title\", \"text\")}\n            ${formField(\"Base\", \"http://www.example.com/thing-path\", \"thing-base\", \"url\")}`;\n};\n\nexport function RequestTdDescription() {\n    return `<textarea rows=\"5\"\n    class=\"bg-gray-200 \n    appearance-none \n    border-2 border-gray-200 rounded w-full \n    py-2 px-4 \n    text-gray-700 \n    leading-tight \n    focus:outline-none \n    focus:bg-white \n    focus:border-blue-500\" \n    id=\"thing-description\" \n    placeholder=\"A short description of what the Thing does...\">`;\n};\n\nexport function RequestTdSecurity() {\n    return `\n    <div class=\"relative\">\n        <select class=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"thing-security\">\n            <option>nosec</option>\n            <option>basic</option>\n            <option>digest</option>\n            <option>bearer</option>\n            <option>psk</option>\n            <option>oauth2</option>\n            <option>apikey</option>\n        </select>\n        <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n            <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/></svg>\n        </div>\n  </div>`;\n};\n\nconst formField = (label, placeholder, id, type) => {\n    return `<div class=\"md:flex md:items-center mb-6\">\n    <div class=\"md:w-1/6\">\n        <label class=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\" for=\"${id}\">\n            ${label}\n        </label>\n    </div>\n    <div class=\"md:w-5/6\">\n        <input class=\"bg-gray-200 \n        appearance-none \n        border-2 border-gray-200 rounded w-full \n        py-2 px-4 \n        text-gray-700 \n        leading-tight \n        focus:outline-none \n        focus:bg-white \n        focus:border-blue-500\" \n        id=\"${id}\" \n        placeholder=\"${placeholder}\"\n        type=\"${type}\">\n    </div>\n</div>`\n}","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\n\nimport * as newTd from './CreateNewTDContent.js';\n\nconst swal = require('sweetalert2');\n\nexport default async function CreateNewTD() {\n    var tdMetadata = {};\n    var tdDescription = \"\";\n    var tdSecurity = \"\";\n\n    return swal.mixin({\n        input: 'text',\n        backdrop: true,\n        reverseButtons: true,\n        confirmButtonText: 'Next &rarr;',\n        showCancelButton: true,\n        progressSteps: ['1', '2', '3']\n    }).queue([\n        {\n            title: 'TD Identifiers',\n            html: newTd.RequestTdMetadata(),\n            input: null,\n            preConfirm: () => {\n                let id = document.getElementById('thing-id').value;\n                let title = document.getElementById('thing-title').value;\n                let base = document.getElementById('thing-base').value;\n\n                tdMetadata = { id: id, title: title, base: base }\n            }\n        },\n        {\n            title: 'TD Description',\n            html: newTd.RequestTdDescription(),\n            input: null,\n            preConfirm: () => {\n                tdDescription = document.getElementById('thing-description').value;\n            }\n\n        },\n        {\n            title: 'TD Security',\n            html: newTd.RequestTdSecurity(),\n            input: null,\n            preConfirm: () => {\n                tdSecurity = document.getElementById('thing-security').value;\n            }\n\n        }\n    ]).then((result) => {\n        if (result.dismiss) {\n            return;\n        }\n\n        var thing = {};\n\n        thing[\"@context\"] = \"https://www.w3.org/2019/wot/td/v1\";\n        thing[\"title\"] = tdMetadata.title !== \"\" ? tdMetadata.title : \"ediTDor Thing\";\n        thing[\"id\"] = tdMetadata.id !== \"\" ? tdMetadata.id : \"urn:editdor-thing-id\";\n\n        if (tdMetadata.base !== \"\") {\n            thing[\"base\"] = tdMetadata.base !== \"\" ? tdMetadata.base : \"/\";\n        }\n\n        if (tdDescription !== \"\") {\n            thing[\"description\"] = tdDescription;\n        }\n\n        let securityDefinitions = {};\n        securityDefinitions[`${tdSecurity}_sc`] = { scheme: tdSecurity };\n\n        thing[\"securityDefinitions\"] = securityDefinitions;\n        thing[\"security\"] = `${tdSecurity}_sc`;\n\n        thing[\"properties\"] = {};\n        thing[\"actions\"] = {};\n        thing[\"events\"] = {};\n\n        return thing;\n    })\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useCallback, useContext, useEffect } from 'react';\nimport logo from \"../../../assets/editdor.png\"\nimport wot from \"../../../assets/WoT.png\"\nimport ediTDorContext from '../../../context/ediTDorContext';\nimport '../../../assets/main.css'\nimport './Button.js'\nimport Button from './Button.js';\nimport CreateNewTD from './CreateNewTD.js';\n\nexport default function AppHeader() {\n    const context = useContext(ediTDorContext);\n\n    /**\n    * Check if the Browser Supports the new Native File System Api (Chromium 86.0)\n    */\n    const hasNativeFS = useCallback(() => {\n        return 'chooseFileSystemEntries' in window || 'showOpenFilePicker' in window\n    }, []);\n\n    const verifyDiscard = useCallback(async () => {\n        if (!context.isModified) {\n            return true;\n        }\n\n        console.log('verifyDiscard', context.isModified)\n        const msg = 'Discard changes? All changes you made to your TD will be lost.';\n        return await window.confirm(msg);\n    }, [context.isModified]);\n\n\n    /**\n     * \n     * @param {*} file \n     * \n     * Read file content\n     */\n    const read = useCallback((file) => {\n        return file.text ? file.text() : _readFileHTML5(file);\n    }, [])\n\n    const readFile = useCallback(async (file, fileHandle) => {\n        try {\n            context.updateOfflineTD(await read(file));\n            context.setFileHandle(fileHandle || file.name);\n            context.updateIsModified(false)\n        } catch (ex) {\n            const msg = `An error occured reading ${context.offlineTD}`;\n            console.error(msg, ex);\n            //TODO: Replace with SweetAlert2\n            alert(msg);\n        }\n    }, [context, read]);\n\n    /**\n     * \n     * @param {*} _ \n     * \n     * Open File from Filesystem\n     */\n    const openFile = useCallback(async (_) => {\n        if (!await verifyDiscard()) {\n            return;\n        }\n\n        if (!hasNativeFS()) {\n            const file = await getFileHTML5();\n            if (file) {\n                await readFile(file);\n            }\n            return;\n        }\n\n        let fileHandle;\n        try {\n            fileHandle = await getFileHandle();\n            const file = await fileHandle.getFile();\n            await readFile(file, fileHandle);\n        } catch (ex) {\n            const msg = 'We ran into an error trying to open your TD.';\n            console.error(msg, ex);\n            alert(msg);\n        }\n    }, [readFile, verifyDiscard, hasNativeFS]);\n\n    const writeFile = useCallback(async (fileHandle, contents) => {\n        if (fileHandle.createWriter) {\n            const writer = await fileHandle.createWriter();\n            await writer.write(0, contents);\n            await writer.close();\n            return;\n        }\n\n        const writable = await fileHandle.createWritable();\n        await writable.write(contents);\n        await writable.close();\n\n        // refresh td for rendered view\n        setTimeout(() => {\n            context.updateOfflineTD(contents, 'AppHEader');\n            context.updateIsModified(false);\n        }, 500);\n    }, [context])\n\n    const saveAsHTML5 = useCallback((filename, contents) => {\n        const aDownload = document.getElementById('aDownload');\n        filename = filename || 'untitled.txt';\n        const opts = { type: 'text/plain' };\n        const file = new File([contents], '', opts);\n        aDownload.href = window.URL.createObjectURL(file);\n        aDownload.setAttribute('download', filename);\n        aDownload.click();\n    }, []);\n\n    const saveFileAs = useCallback(async () => {\n        if (!hasNativeFS()) {\n            saveAsHTML5(context.name, context.offlineTD);\n            return;\n        }\n\n        let fileHandle;\n        try {\n            fileHandle = await getNewFileHandle();\n        } catch (ex) {\n            const msg = 'We ran into an error trying to save your TD.';\n            console.error(msg, ex);\n            return alert(msg);\n        }\n\n        try {\n            await writeFile(fileHandle, context.offlineTD);\n            context.setFileHandle(fileHandle);\n            context.updateIsModified(false);\n        } catch (ex) {\n            const msg = 'Unfortunately we were unable to save your TD.';\n            console.error(msg, ex);\n            alert(msg);\n        }\n    }, [saveAsHTML5, hasNativeFS, context, writeFile]);\n\n    const newFile = useCallback(async () => {\n        const thing = await CreateNewTD();\n        if (thing) {\n            context.updateOfflineTD(JSON.stringify(thing, null, \"\\t\"), 'AppHEader');\n        }\n    }, [context]);\n\n    const saveFile = useCallback(async () => {\n        try {\n            if (!context.fileHandle) {\n                return await saveFileAs();\n            }\n            await writeFile(context.fileHandle, context.offlineTD);\n            \n        } catch (ex) {\n            const msg = 'Unfortunately we were unable to save your TD.';\n            console.error(msg, ex);\n            alert(msg);\n        }\n    }, [context, saveFileAs, writeFile])\n\n    /**\n     * Reading files with HTML5 input\n     */\n    const getFileHTML5 = async () => {\n        return new Promise((resolve, reject) => {\n            const fileInput = document.getElementById('fileInput');\n            fileInput.onchange = (e) => {\n                const file = fileInput.files[0];\n                if (file) {\n                    return resolve(file);\n                }\n                return reject(new Error('AbortError'));\n            };\n            fileInput.click();\n        });\n    };\n\n    /**\n     * File Handle from native filesystem api\n     * Only JSON/JSON+LD Files are supported\n     */\n    const getFileHandle = () => {\n        const opts = {\n            types: [{\n                description: 'Thing Description',\n                accept: { 'application/ld+json': ['.jsonld', '.json'] },\n            }],\n        };\n        if ('showOpenFilePicker' in window) {\n            return window.showOpenFilePicker(opts).then((handles) => handles[0]);\n        }\n        return window.chooseFileSystemEntries();\n    }\n\n    const getNewFileHandle = async () => {\n        // new file system api\n        if ('showSaveFilePicker' in window) {\n            const opts = {\n                types: [{\n                    description: 'Thing Description',\n                    accept: { 'application/ld+json': ['.jsonld', '.json'] },\n                }],\n            };\n\n            return await window.showSaveFilePicker(opts);\n        }\n\n        // old html file input\n        const opts = {\n            type: 'save-file',\n            accepts: [{\n                description: 'Thing Description',\n                extensions: ['.jsonld', '.json'],\n                mimeTypes: ['application/ld+json'],\n            }],\n        };\n\n        return await window.chooseFileSystemEntries(opts);\n    }\n\n    const _readFileHTML5 = (file) => {\n        return new Promise((resolve) => {\n            const reader = new FileReader();\n            reader.addEventListener('loadend', (event) => {\n                const text = event.srcElement.result;\n                return resolve(text);\n            });\n            reader.readAsText(file);\n        });\n    }\n\n    useEffect(() => {\n        const shortcutHandler = (e) => {\n            if ((window.navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey) && e.key === 's') {\n                e.preventDefault();\n                e.stopPropagation();\n                saveFile();\n            }\n            if ((window.navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey) && e.key === 'o') {\n                e.preventDefault();\n                e.stopPropagation();\n                openFile();\n            }\n            if ((window.navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey) && e.key === 'n') {\n                e.preventDefault();\n                e.stopPropagation();\n                newFile();\n            }\n        }\n\n        // Adding Eventlistener for shortcuts\n        document.addEventListener(\"keydown\", shortcutHandler, false);\n        window.onbeforeunload = function (event) {\n            var message = 'Important: Please click on \\'Save\\' button to leave this page.';\n            if (typeof event == 'undefined') {\n                event = window.event;\n            }\n            if (event) {\n                event.returnValue = message;\n            }\n            return message;\n        };\n        return () => {\n            //Remove Eventlistener for shortcuts before unmounting component\n            document.removeEventListener(\"keydown\", shortcutHandler, false);\n        }\n    }, [openFile, saveFile, newFile])\n\n\n    return (\n        <>\n            <header className=\"flex justify-between items-center h-16 bg-blue-500\">\n                <div className=\"flex items-center\">\n                    <img className=\"pl-2 h-12\" src={wot} alt=\"WOT\" />\n                    <div className=\"w-2\"></div>\n                    <img className=\"pl-2 h-8\" src={logo} alt=\"LOGO\" />\n                </div>\n                <div className=\"flex space-x-2 pr-2\">\n                    <Button onClick={newFile}>New TD/TM</Button>\n                    <Button onClick={openFile}>Open TD/TM</Button>\n                    <Button onClick={saveFile}>Save</Button>\n                    <Button onClick={saveFileAs}>Save As</Button>\n                </div >\n            </header>\n            <input className=\"h-0\" type=\"file\" id=\"fileInput\" style={{ display: \"none\" }}></input>\n            <a className=\"h-0\" id=\"aDownload\" href=\"/\" style={{ display: \"none\" }}>download</a>\n        </>\n    );\n}\n\n","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nexport const UPDATE_OFFLINE_TD = 'UPDATE_OFFLINE_TD';\nexport const UPDATE_IS_MODFIED = 'UPDATE_IS_MODFIED';\nexport const SET_FILE_HANDLE = 'SET_FILE_HANDLE';\nexport const REMOVE_FORM_FROM_TD = 'REMOVE_FORM_FROM_TD';\nexport const ADD_PROPERTYFORM_TO_TD = 'ADD_PROPERTYFORM_TO_TD';\nexport const ADD_ACTIONFORM_TO_TD = 'ADD_ACTIONFORM_TO_TD';\nexport const ADD_EVENTFORM_TO_TD = 'ADD_EVENTFORM_TO_TD';\n\nconst updateOfflineTDReducer = (offlineTD, state) => {\n  return { ...state, offlineTD, isModified: true };\n};\n\nconst removeFormReducer = (form, state) => {\n  let offlineTD = JSON.parse(state.offlineTD)\n  console.log(form);\n  try {\n    offlineTD[form.type][form.propName].forms.forEach((element, i) => {\n      if (typeof (element.op) === 'string') {\n        if (element.href === form.form.href) {\n          offlineTD[form.type][form.propName].forms.splice(i, 1)\n        }\n      } else {\n        if (element.href === form.form.href && element.op.indexOf(form.form.op) !== -1) {\n          element.op.splice(element.op.indexOf(form.form.op), 1)\n        }\n        if (element.op.length === 0) {\n          offlineTD[form.type][form.propName].forms.splice(i, 1)\n        }\n      }\n    });\n  } catch (e) {\n    alert('Sorry we were unable to delete the Form.');\n  }\n  return { ...state, offlineTD: JSON.stringify(offlineTD, null, 2) };\n};\n\nconst addPropertyFormReducer = (form, state) => {\n  let offlineTD = JSON.parse(state.offlineTD)\n  const property = offlineTD.properties[form.propName];\n  if (property.forms === undefined) {\n    property.forms = []\n  }\n  property.forms.push(form.form);\n  return { ...state, offlineTD: JSON.stringify(offlineTD, null, 2) };\n};\n\nconst addActionFormReducer = (params, state) => {\n  let offlineTD = JSON.parse(state.offlineTD)\n  const action = offlineTD.actions[params.actionName];\n  if (action.forms === undefined) {\n    action.forms = []\n  }\n  action.forms.push(params.form);\n  return { ...state, offlineTD: JSON.stringify(offlineTD, null, 2) };\n};\n\nconst addEventFormReducer = (params, state) => {\n  let offlineTD = JSON.parse(state.offlineTD)\n  const event = offlineTD.events[params.eventName];\n  if (event.forms === undefined) {\n    event.forms = []\n  }\n  event.forms.push(params.form);\n  return { ...state, offlineTD: JSON.stringify(offlineTD, null, 2) };\n};\n\nconst updateIsModified = (isModified, state) => {\n  return { ...state, isModified: isModified };\n};\n\nconst updateFileHandleReducer = (fileHandle, state) => {\n  return { ...state, fileHandle: fileHandle };\n};\n\nconst editdorReducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_OFFLINE_TD:\n      return updateOfflineTDReducer(action.offlineTD, state);\n    case UPDATE_IS_MODFIED:\n      return updateIsModified(action.isModified, state);\n    case SET_FILE_HANDLE:\n      const newState = updateFileHandleReducer(action.fileHandle, state)\n      return newState;\n    case REMOVE_FORM_FROM_TD:\n      return removeFormReducer(action.form, state)\n    case ADD_PROPERTYFORM_TO_TD:\n      return addPropertyFormReducer(action.form, state)\n    case ADD_ACTIONFORM_TO_TD:\n      return addActionFormReducer(action.params, state)\n    case ADD_EVENTFORM_TO_TD:\n      return addEventFormReducer(action.params, state)\n    default:\n      return state;\n  }\n};\n\nexport {editdorReducer}","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useReducer } from 'react';\n\nimport EdiTDorContext from './ediTDorContext';\nimport { editdorReducer, REMOVE_FORM_FROM_TD, SET_FILE_HANDLE, UPDATE_IS_MODFIED, UPDATE_OFFLINE_TD, ADD_PROPERTYFORM_TO_TD, ADD_ACTIONFORM_TO_TD, ADD_EVENTFORM_TO_TD } from './editorReducers';\n\n\nconst GlobalState = props => {\n  const [editdorState, dispatch] = useReducer(editdorReducer, { offlineTD: '', theme: 'dark' });\n\n  const updateOfflineTD = (offlineTD, props) => {\n    dispatch({ type: UPDATE_OFFLINE_TD, offlineTD: offlineTD });\n  };\n\n  const updateIsModified = isModified => {\n    dispatch({ type: UPDATE_IS_MODFIED, isModified: isModified });\n  };\n\n  const setFileHandle = fileHandle => {\n    dispatch({ type: SET_FILE_HANDLE, fileHandle: fileHandle });\n  };\n\n  const removeForm = form => {\n    dispatch({ type: REMOVE_FORM_FROM_TD, form: form });\n  };\n\n  const addForm = form => {\n    dispatch({ type: ADD_PROPERTYFORM_TO_TD, form: form });\n  };\n\n  const addActionForm = params => {\n    dispatch({ type: ADD_ACTIONFORM_TO_TD, params: params });\n  };\n  const addEventForm = params => {\n    dispatch({ type: ADD_EVENTFORM_TO_TD, params: params });\n  };\n\n  return (\n    <EdiTDorContext.Provider\n      value={{\n        offlineTD: editdorState.offlineTD,\n        theme: editdorState.theme,\n        isModified: editdorState.isModified,\n        name: editdorState.name,\n        fileHandle: editdorState.fileHandle,\n        updateOfflineTD,\n        updateIsModified,\n        setFileHandle,\n        removeForm,\n        addForm,\n        addActionForm,\n        addEventForm\n      }}\n    >\n      {props.children}\n    </EdiTDorContext.Provider>\n  );\n};\n\nexport default GlobalState;","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport TDViewer from '../TDViewer/TDViewer'\nimport JSONEditorComponent from \"../Editor/Editor\";\nimport AppHeader from './AppHeader/AppHeader';\nimport GlobalState from '../../context/GlobalState';\n\nimport '../../assets/main.css'\n\nconst App = (props) => {\n    useEffect(() => { dragElement(document.getElementById(\"separator\"), \"H\"); }, [props])\n    return (\n        <GlobalState>\n            <main className=\"h-screen w-full\">\n                <AppHeader></AppHeader>\n                <div className=\"splitter\">\n                    <div className=\"w-5/12\" id=\"first\"><JSONEditorComponent /></div>\n                    <div id=\"separator\"></div>\n                    <div className=\"w-7/12\" id=\"second\"><TDViewer /></div>\n                </div>\n            </main>\n        </GlobalState>\n    );\n}\n\n/**\n * \n * @param {*} element \n * @param {*} direction \n * \n * Adjust size of the two Panels \"first\" and \"second\"\n */\nconst dragElement = (element, direction) => {\n    let md;\n    const first = document.getElementById(\"first\");\n    const second = document.getElementById(\"second\");\n\n    const onMouseMove = (e) => {\n        var delta = {\n            x: e.clientX - md.e.clientX,\n            y: e.clientY - md.e.clientY\n        };\n\n        if (direction === \"H\") {\n            delta.x = Math.min(Math.max(delta.x, -md.firstWidth),\n                md.secondWidth);\n\n            element.style.left = md.offsetLeft + delta.x + \"px\";\n            first.style.width = (md.firstWidth + delta.x) + \"px\";\n            second.style.width = (md.secondWidth - delta.x) + \"px\";\n        }\n    }\n\n    const onMouseDown = (e) => {\n        md = {\n            e,\n            offsetLeft: element.offsetLeft,\n            offsetTop: element.offsetTop,\n            firstWidth: first.offsetWidth,\n            secondWidth: second.offsetWidth\n        };\n        document.onmousemove = onMouseMove;\n        document.onmouseup = () => {\n            document.onmousemove = document.onmouseup = null;\n        }\n    }\n\n    element.onmousedown = onMouseDown;\n}\n\nexport default App;","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React from 'react';\nimport ReactDOM from 'react-dom'; \nimport './assets/main.css'\nimport './index.css'\nimport App from './components/App/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n//No PWA at the moment.\n// serviceWorker.register();\n"],"sourceRoot":""}